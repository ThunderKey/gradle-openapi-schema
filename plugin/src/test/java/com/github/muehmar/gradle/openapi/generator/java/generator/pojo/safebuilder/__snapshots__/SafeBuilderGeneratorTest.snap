enabledSafeBuilder=[
com.github.muehmar.openapi.util.Tristate
java.util.Map
java.util.Optional

/**
 * Instantiates a new staged builder. Explicit properties have precedence over
 * additional properties, i.e. an additional property with the same name as an
 * explicit property will be discarded.
 */
public static BuilderStages.FullPropertyBuilder0 fullBuilder() {
  return new BuilderStages.FullPropertyBuilder0(new Builder());
}

/**
 * Instantiates a new staged builder. Explicit properties have precedence over
 * additional properties, i.e. an additional property with the same name as an
 * explicit property will be discarded.
 */
public static BuilderStages.FullPropertyBuilder0 fullNecessityAndNullabilityDtoBuilder() {
  return new BuilderStages.FullPropertyBuilder0(new Builder());
}

/**
 * Instantiates a new staged builder. Explicit properties have precedence over
 * additional properties, i.e. an additional property with the same name as an
 * explicit property will be discarded.
 */
public static BuilderStages.PropertyBuilder0 builder() {
  return new BuilderStages.PropertyBuilder0(new Builder());
}

/**
 * Instantiates a new staged builder. Explicit properties have precedence over
 * additional properties, i.e. an additional property with the same name as an
 * explicit property will be discarded.
 */
public static BuilderStages.PropertyBuilder0 necessityAndNullabilityDtoBuilder() {
  return new BuilderStages.PropertyBuilder0(new Builder());
}

public static final class BuilderStages {
  private BuilderStages() {}

  public static final class FullPropertyBuilder0 {
    private final Builder builder;

    private FullPropertyBuilder0(Builder builder) {
      this.builder = builder;
    }

    /**
     * RequiredStringVal
     */
    public FullPropertyBuilder1 setRequiredStringVal(String requiredStringVal) {
      return new FullPropertyBuilder1(builder.setRequiredStringVal(requiredStringVal));
    }

  }

  public static final class FullPropertyBuilder1 {
    private final Builder builder;

    private FullPropertyBuilder1(Builder builder) {
      this.builder = builder;
    }

    /**
     * RequiredNullableStringVal
     */
    public FullOptPropertyBuilder0 setRequiredNullableStringVal(String requiredNullableStringVal) {
      return new FullOptPropertyBuilder0(builder.setRequiredNullableStringVal(requiredNullableStringVal));
    }

    /**
     * RequiredNullableStringVal
     */
    public FullOptPropertyBuilder0 setRequiredNullableStringVal(Optional<String> requiredNullableStringVal) {
      return new FullOptPropertyBuilder0(builder.setRequiredNullableStringVal(requiredNullableStringVal));
    }
  }

  public static final class FullOptPropertyBuilder0 {
    private final Builder builder;

    private FullOptPropertyBuilder0(Builder builder) {
      this.builder = builder;
    }

    /**
     * OptionalStringVal
     */
    public FullOptPropertyBuilder1 setOptionalStringVal(String optionalStringVal) {
      return new FullOptPropertyBuilder1(builder.setOptionalStringVal(optionalStringVal));
    }

    /**
     * OptionalStringVal
     */
    public FullOptPropertyBuilder1 setOptionalStringVal(Optional<String> optionalStringVal) {
      return new FullOptPropertyBuilder1(builder.setOptionalStringVal(optionalStringVal));
    }

  }

  public static final class FullOptPropertyBuilder1 {
    private final Builder builder;

    private FullOptPropertyBuilder1(Builder builder) {
      this.builder = builder;
    }

    /**
     * OptionalNullableStringVal
     */
    public FullOptPropertyBuilder2 setOptionalNullableStringVal(String optionalNullableStringVal) {
      return new FullOptPropertyBuilder2(builder.setOptionalNullableStringVal(optionalNullableStringVal));
    }

    /**
     * OptionalNullableStringVal
     */
    public FullOptPropertyBuilder2 setOptionalNullableStringVal(Tristate<String> optionalNullableStringVal) {
      return new FullOptPropertyBuilder2(builder.setOptionalNullableStringVal(optionalNullableStringVal));
    }
  }

  public static final class FullOptPropertyBuilder2 {
    private final Builder builder;

    private FullOptPropertyBuilder2(Builder builder) {
      this.builder = builder;
    }

    public FullOptPropertyBuilder2 addAdditionalProperty(String key, Object value) {
      return new FullOptPropertyBuilder2(builder.addAdditionalProperty(key, value));
    }

    public FullOptPropertyBuilder2 setAdditionalProperties(Map<String, Object> additionalProperties) {
      return new FullOptPropertyBuilder2(builder.setAdditionalProperties(additionalProperties));
    }

    public NecessityAndNullabilityDto build(){
      return builder.build();
    }
  }

  public static final class PropertyBuilder0 {
    private final Builder builder;

    private PropertyBuilder0(Builder builder) {
      this.builder = builder;
    }

    /**
     * RequiredStringVal
     */
    public PropertyBuilder1 setRequiredStringVal(String requiredStringVal) {
      return new PropertyBuilder1(builder.setRequiredStringVal(requiredStringVal));
    }

  }

  public static final class PropertyBuilder1 {
    private final Builder builder;

    private PropertyBuilder1(Builder builder) {
      this.builder = builder;
    }

    /**
     * RequiredNullableStringVal
     */
    public PropertyBuilder2 setRequiredNullableStringVal(String requiredNullableStringVal) {
      return new PropertyBuilder2(builder.setRequiredNullableStringVal(requiredNullableStringVal));
    }

    /**
     * RequiredNullableStringVal
     */
    public PropertyBuilder2 setRequiredNullableStringVal(Optional<String> requiredNullableStringVal) {
      return new PropertyBuilder2(builder.setRequiredNullableStringVal(requiredNullableStringVal));
    }
  }

  public static final class PropertyBuilder2 {
    private final Builder builder;

    private PropertyBuilder2(Builder builder) {
      this.builder = builder;
    }

    public OptPropertyBuilder0 andAllOptionals(){
      return new OptPropertyBuilder0(builder);
    }

    public Builder andOptionals(){
      return builder;
    }

    public NecessityAndNullabilityDto build(){
      return builder.build();
    }
  }

  public static final class OptPropertyBuilder0 {
    private final Builder builder;

    private OptPropertyBuilder0(Builder builder) {
      this.builder = builder;
    }

    /**
     * OptionalStringVal
     */
    public OptPropertyBuilder1 setOptionalStringVal(String optionalStringVal) {
      return new OptPropertyBuilder1(builder.setOptionalStringVal(optionalStringVal));
    }

    /**
     * OptionalStringVal
     */
    public OptPropertyBuilder1 setOptionalStringVal(Optional<String> optionalStringVal) {
      return new OptPropertyBuilder1(builder.setOptionalStringVal(optionalStringVal));
    }

  }

  public static final class OptPropertyBuilder1 {
    private final Builder builder;

    private OptPropertyBuilder1(Builder builder) {
      this.builder = builder;
    }

    /**
     * OptionalNullableStringVal
     */
    public OptPropertyBuilder2 setOptionalNullableStringVal(String optionalNullableStringVal) {
      return new OptPropertyBuilder2(builder.setOptionalNullableStringVal(optionalNullableStringVal));
    }

    /**
     * OptionalNullableStringVal
     */
    public OptPropertyBuilder2 setOptionalNullableStringVal(Tristate<String> optionalNullableStringVal) {
      return new OptPropertyBuilder2(builder.setOptionalNullableStringVal(optionalNullableStringVal));
    }
  }

  public static final class OptPropertyBuilder2 {
    private final Builder builder;

    private OptPropertyBuilder2(Builder builder) {
      this.builder = builder;
    }

    public OptPropertyBuilder2 addAdditionalProperty(String key, Object value) {
      return new OptPropertyBuilder2(builder.addAdditionalProperty(key, value));
    }

    public OptPropertyBuilder2 setAdditionalProperties(Map<String, Object> additionalProperties) {
      return new OptPropertyBuilder2(builder.setAdditionalProperties(additionalProperties));
    }

    public NecessityAndNullabilityDto build(){
      return builder.build();
    }
  }
}
]