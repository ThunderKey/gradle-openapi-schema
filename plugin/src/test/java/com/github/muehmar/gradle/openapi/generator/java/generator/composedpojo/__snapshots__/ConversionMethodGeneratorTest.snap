composedPojo[anyOf]=[
private SampleObjectPojo1Dto asSampleObjectPojo1Dto() {
  return new SampleObjectPojo1Dto(
    stringVal,
    intVal,
    doubleVal,
    additionalProperties
  );
}

private ObjectPojo1Dto asObjectPojo1Dto() {
  return new ObjectPojo1Dto(
    birthdate,
    additionalProperties.entrySet().stream()
      .filter(e -> e.getValue() instanceof String)
      .collect(Collectors.toMap(Map.Entry::getKey, e -> (String)e.getValue()))
  );
}
]


composedPojo[oneOf]=[
private SampleObjectPojo1Dto asSampleObjectPojo1Dto() {
  return new SampleObjectPojo1Dto(
    stringVal,
    intVal,
    doubleVal,
    additionalProperties
  );
}

private ObjectPojo1Dto asObjectPojo1Dto() {
  return new ObjectPojo1Dto(
    birthdate,
    additionalProperties.entrySet().stream()
      .filter(e -> e.getValue() instanceof String)
      .collect(Collectors.toMap(Map.Entry::getKey, e -> (String)e.getValue()))
  );
}
]