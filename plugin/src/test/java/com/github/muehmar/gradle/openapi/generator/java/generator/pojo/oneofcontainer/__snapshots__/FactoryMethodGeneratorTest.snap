allNecessityAndNullabilityVariantsPojo=[
.
.
/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * SampleObjectPojo1Dto}.
 */
public static ObjectOneOfContainerDto fromSampleObjectPojo1(SampleObjectPojo1Dto dto) {
  return new ObjectOneOfContainerDto(
    dto.getStringVal(),
    dto.getIntVal(),
    dto.getDoubleVal(),
    null,
    null,
    false,
    null,
    null,
    false,
    dto.getAdditionalProperties()
  );
}

/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * NecessityAndNullabilityDto}.
 */
public static ObjectOneOfContainerDto fromNecessityAndNullability(NecessityAndNullabilityDto dto) {
  return new ObjectOneOfContainerDto(
    null,
    null,
    null,
    dto.getRequiredStringVal(),
    dto.getRequiredNullableStringValOr(null),
    true,
    dto.getOptionalStringValOr(null),
    dto.getOptionalNullableStringVal().onValue(val -> val).onNull(() -> null).onAbsent(() -> null),
    dto.getOptionalNullableStringVal().onValue(ignore -> false).onNull(() -> true).onAbsent(() -> false),
    dto.getAdditionalProperties()
  );
}
]


discriminatorWithMapping=[
.
.
/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * SampleObjectPojo1Dto}.
 */
public static ObjectOneOfContainerDto fromSampleObjectPojo1(SampleObjectPojo1Dto dto) {
  return new ObjectOneOfContainerDto(
    "Custom1",
    dto.getIntVal(),
    dto.getDoubleVal(),
    null,
    null,
    dto.getAdditionalProperties()
  );
}

/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * SampleObjectPojo2Dto}.
 */
public static ObjectOneOfContainerDto fromSampleObjectPojo2(SampleObjectPojo2Dto dto) {
  return new ObjectOneOfContainerDto(
    "Custom2",
    null,
    null,
    dto.getBirthdate(),
    dto.getEmail(),
    dto.getAdditionalProperties()
  );
}
]


discriminatorWithoutMapping=[
.
.
/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * SampleObjectPojo1Dto}.
 */
public static ObjectOneOfContainerDto fromSampleObjectPojo1(SampleObjectPojo1Dto dto) {
  return new ObjectOneOfContainerDto(
    "SampleObjectPojo1",
    dto.getIntVal(),
    dto.getDoubleVal(),
    null,
    null,
    dto.getAdditionalProperties()
  );
}

/**
 * Creates an instance of {@link ObjectOneOfContainerDto} from a {@link
 * SampleObjectPojo2Dto}.
 */
public static ObjectOneOfContainerDto fromSampleObjectPojo2(SampleObjectPojo2Dto dto) {
  return new ObjectOneOfContainerDto(
    "SampleObjectPojo2",
    null,
    null,
    dto.getBirthdate(),
    dto.getEmail(),
    dto.getAdditionalProperties()
  );
}
]