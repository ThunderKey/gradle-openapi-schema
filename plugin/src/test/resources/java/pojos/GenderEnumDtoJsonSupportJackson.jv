package com.github.muehmar;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;

import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Gender of a user
 */
public enum GenderDto {
  MALE("MALE", ""),
  FEMALE("FEMALE", "");

  private final String value;
  private final String description;

  GenderDto(String value, String description) {
    this.value = value;
    this.description = description;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static GenderDto fromValue(String value) {
    for (GenderDto e : GenderDto.values()) {
      if (e.value.equals(value)) {
        return e;
      }
    }
    final String possibleValues =
      Stream.of(values()).map(GenderDto::getValue).collect(Collectors.joining(", "));
    throw new IllegalArgumentException(
      "Unexpected value '"
        + value
        + "' for GenderDto, possible values are ["
        + possibleValues
        + "]");
  }
}